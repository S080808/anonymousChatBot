from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from sqlalchemy.ext.asyncio import AsyncSession

from bot.states import SpecialistRegisterState, UserState
from db.models import Specialist

from bot.keyboards.reply import rmk, register_kb

router = Router()


@router.message(F.text == "üë®‚Äç‚öïÔ∏è –Ø —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
                UserState.MENU_STATE)
async def i_am_specialist(message: Message):
    await message.answer(text="<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ —Ä–∞–∑–¥–µ–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤! üåü</b>\n<i>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å "
                              "–ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –∞–Ω–æ–Ω–∏–º–Ω–æ, –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</i>", reply_markup=rmk)
    await message.answer(text="<b>üîπ –ö–∞–∫ —Å—Ç–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º:</b>\n<i>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã,"
                              " –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–∑—é–º–µ –∏–ª–∏ –¥–∏–ø–ª–æ–º).</i>")
    await message.answer(text="<b>üîπ –í–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n<u>–í—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è –æ–∫–∞–∑–∞–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ "
                              "–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è —Å–≤–æ–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤.</u>\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä "
                              "–ø–æ–º–æ–≥–∞—Ç—å —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üíñ</b>", reply_markup=register_kb)


@router.message(F.text == "üí¨ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", UserState.MENU_STATE)
async def register(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ, –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é üòé")
    await message.answer("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—ë –∏–º—è:", reply_markup=rmk)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_NAME)


@router.message(F.text == "‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def return_to_menu(message: Message, state: FSMContext, session: AsyncSession):
    from bot.handlers.main_menu import start
    await start(message, session, state)


@router.message(SpecialistRegisterState.WAIT_FOR_NAME)
async def name(message: Message, state: FSMContext):
    if message.content_type != "text":
        await message.reply("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è ü§î")
        return
    await state.update_data(name=message.text)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_SURNAME)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:")


@router.message(SpecialistRegisterState.WAIT_FOR_SURNAME)
async def surname(message: Message, state: FSMContext):
    if message.content_type != "text":
        await message.reply("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é ü§î")
        return
    await state.update_data(surname=message.text)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_AGE)

    data = await state.get_data()
    await message.reply(f"–û—Ç–ª–∏—á–Ω–æ, <b>{data['surname']} {data['name']}</b>")

    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")


@router.message(SpecialistRegisterState.WAIT_FOR_AGE)
async def age(message: Message, state: FSMContext):
    if message.content_type != "text" or not message.text.isdigit():
        await message.reply("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç ü§î")
        return
    await state.update_data(age=message.text)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_PHOTO)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é:")


@router.message(SpecialistRegisterState.WAIT_FOR_PHOTO)
async def photo(message: Message, state: FSMContext):
    if message.content_type != "photo":
        await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é ü§î")
        return
    await state.update_data(photo=message.photo[-1].file_id)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_DESCRIPTION)
    await message.reply("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –≤ –¥–≤—É—Ö —Å–ª–æ–≤–∞—Ö üòá")


@router.message(SpecialistRegisterState.WAIT_FOR_DESCRIPTION)
async def description(message: Message, state: FSMContext):
    if message.content_type != "text":
        await message.reply("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ —Ç–µ–∫—Å—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ü§ñ")
        return
    await state.update_data(description=message.text)
    await state.set_state(SpecialistRegisterState.WAIT_FOR_RESUME)
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∫—É–º–µ–Ω—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é: \n"
                        "<tg-spoiler>(–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf üíé)</tg-spoiler>")


@router.message(SpecialistRegisterState.WAIT_FOR_RESUME)
async def resume(message: Message, state: FSMContext, session: AsyncSession):
    if message.content_type != "document":
        await message.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ üòñ")
        return
    data = await state.get_data()

    await state.set_state(SpecialistRegisterState.WAIT_FOR_MODERATION)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é ‚úçÔ∏è")
    await message.answer("–ö–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –í–∞–º –ø—Ä–∏–¥–µ—Ç <b>—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b> üí¨")

    session.add(Specialist(id=message.from_user.id,
                           name=data["name"],
                           surname=data["surname"],
                           age=data["age"],
                           photo_id=data["photo"],
                           description=data["description"],
                           file_id=message.document.file_id,
                           status=-1))
    await session.commit()
